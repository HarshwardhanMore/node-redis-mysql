version: '3.8'

services:

  redis:
    image: redis:7.4.1
    container_name: redis
    command: redis-server --appendonly yes
    ports:
      - "${REDIS_HOST_PORT}:${REDIS_CONTAINER_PORT}"
    volumes:
      - my-redis:/data
    networks:
      - my-network

  mysql:
    image: mysql:8.4
    container_name: mysql
    env_file:
      - ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_HOST_PORT:$MYSQLDB_CONTAINER_PORT
    volumes:
      - my-db:/var/lib/mysql
    networks:
      - my-network
    restart: always

  node:
    image: node:23.1.0-alpine3.19
    container_name: node
    env_file:
      - ./.env
    ports:
      - "${NODE_HOST_PORT}:${NODE_CONTAINER_PORT}"
    command: sh -c "yarn install && yarn run dev && echo 'Server started on http://localhost:${NODE_HOST_PORT}'"
    working_dir: /usr/src/app
    volumes:
      - ./package.json:/usr/src/app/package.json
      - ./:/usr/src/app
      - my-node_modules:/usr/src/app/node_modules
    networks:
      - my-network
    restart: always
    depends_on:
      - mysql
      - redis

volumes:
  my-redis:
  my-db:
  my-node_modules:

networks:
  my-network:
    driver: bridge
